/*
 * POOView.java
 */
package Visual;

import Modelo.*;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.GregorianCalendar;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 * The application's main frame.
 */
public class POOView extends FrameView {

    public POOView(SingleFrameApplication app) {
        super(app);

        initComponents();

        lerArq();

        clUpdate();
        flUpdate();
        plUpdate();
        elUpdate();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {

            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String) (evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer) (evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = POOApp.getApplication().getMainFrame();
            aboutBox = new POOAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        POOApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        mainTab = new javax.swing.JTabbedPane();
        AbaCliente = new javax.swing.JTabbedPane();
        panel1 = new java.awt.Panel();
        cadC = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nomeC = new java.awt.TextField();
        cpfC = new java.awt.TextField();
        rgC = new java.awt.TextField();
        telC = new java.awt.TextField();
        endC = new java.awt.TextField();
        panel2 = new java.awt.Panel();
        findC = new java.awt.TextField();
        listC = new java.awt.List();
        AbaFornecedor = new javax.swing.JTabbedPane();
        panel3 = new java.awt.Panel();
        cadF = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        nomeF = new java.awt.TextField();
        cnpjF = new java.awt.TextField();
        telF = new java.awt.TextField();
        panel4 = new java.awt.Panel();
        findF = new java.awt.TextField();
        listF = new java.awt.List();
        AbaProduto = new javax.swing.JTabbedPane();
        panel5 = new java.awt.Panel();
        cadP = new javax.swing.JButton();
        isProd = new java.awt.Checkbox();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        nomeP = new java.awt.TextField();
        qtdP = new javax.swing.JSpinner();
        precoP = new javax.swing.JSpinner();
        panel6 = new java.awt.Panel();
        findP = new java.awt.TextField();
        listP = new java.awt.List();
        AbaEnc = new javax.swing.JPanel();
        findE = new java.awt.TextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        listE = new javax.swing.JTable();

        menuBar.setName("menuBar"); // NOI18N
        menuBar.setOpaque(false);

        fileMenu.setText("Arquivo"); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(Modelo.POOApp.class).getContext().getActionMap(POOView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(Modelo.POOApp.class).getContext().getResourceMap(POOView.class);
        exitMenuItem.setToolTipText(resourceMap.getString("exitMenuItem.toolTipText")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText("Ajuda"); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setToolTipText(resourceMap.getString("aboutMenuItem.toolTipText")); // NOI18N
        aboutMenuItem.setFocusable(true);
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 303, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusMessageLabel)
                    .addComponent(statusAnimationLabel)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        mainTab.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        mainTab.setAutoscrolls(true);
        mainTab.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        mainTab.setFont(resourceMap.getFont("mainTab.font")); // NOI18N
        mainTab.setName("mainTab"); // NOI18N
        mainTab.setOpaque(true);
        mainTab.setVerifyInputWhenFocusTarget(false);

        AbaCliente.setAutoscrolls(true);
        AbaCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        AbaCliente.setDoubleBuffered(true);
        AbaCliente.setFont(resourceMap.getFont("AbaCliente.font")); // NOI18N
        AbaCliente.setName("AbaCliente"); // NOI18N
        AbaCliente.setVerifyInputWhenFocusTarget(false);

        panel1.setName("panel1"); // NOI18N

        cadC.setText("Cadastrar"); // NOI18N
        cadC.setName("cadC"); // NOI18N
        cadC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cadCMouseClicked(evt);
            }
        });

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        nomeC.setName("nomeC"); // NOI18N
        nomeC.setText(resourceMap.getString("nomeC.text")); // NOI18N

        cpfC.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        cpfC.setName("cpfC"); // NOI18N
        cpfC.setText(resourceMap.getString("cpfC.text")); // NOI18N

        rgC.setName("rgC"); // NOI18N
        rgC.setText(resourceMap.getString("rgC.text")); // NOI18N

        telC.setName("telC"); // NOI18N
        telC.setText(resourceMap.getString("telC.text")); // NOI18N

        endC.setName("endC"); // NOI18N
        endC.setText(resourceMap.getString("endC.text")); // NOI18N

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cadC)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rgC, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                            .addComponent(nomeC, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                            .addComponent(cpfC, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                            .addComponent(telC, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                            .addComponent(endC, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE))))
                .addContainerGap())
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(nomeC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(cpfC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(rgC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(telC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(endC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cadC)
                .addContainerGap())
        );

        AbaCliente.addTab("Cadastrar Cliente", panel1);

        panel2.setName("panel2"); // NOI18N

        findC.setName("findC"); // NOI18N
        findC.setText(resourceMap.getString("findC.text")); // NOI18N
        findC.addTextListener(new java.awt.event.TextListener() {
            public void textValueChanged(java.awt.event.TextEvent evt) {
                findCTextValueChanged(evt);
            }
        });

        listC.setName("listC"); // NOI18N
        listC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listCMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(findC, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(listC, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(findC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(listC, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE))
        );

        AbaCliente.addTab("Encontrar Cliente", panel2);

        mainTab.addTab("Cliente", AbaCliente);
        AbaCliente.getAccessibleContext().setAccessibleParent(mainTab);

        AbaFornecedor.setAutoscrolls(true);
        AbaFornecedor.setDoubleBuffered(true);
        AbaFornecedor.setFont(resourceMap.getFont("AbaFornecedor.font")); // NOI18N
        AbaFornecedor.setName("AbaFornecedor"); // NOI18N
        AbaFornecedor.setVerifyInputWhenFocusTarget(false);

        panel3.setName("panel3"); // NOI18N

        cadF.setText("Cadastrar"); // NOI18N
        cadF.setName("cadF"); // NOI18N
        cadF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cadFMouseClicked(evt);
            }
        });

        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N

        jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N

        jLabel11.setText(resourceMap.getString("jLabel11.text")); // NOI18N
        jLabel11.setName("jLabel11"); // NOI18N

        nomeF.setName("nomeF"); // NOI18N
        nomeF.setText(resourceMap.getString("nomeF.text")); // NOI18N

        cnpjF.setName("cnpjF"); // NOI18N
        cnpjF.setText(resourceMap.getString("cnpjF.text")); // NOI18N

        telF.setName("telF"); // NOI18N
        telF.setText(resourceMap.getString("telF.text")); // NOI18N

        javax.swing.GroupLayout panel3Layout = new javax.swing.GroupLayout(panel3);
        panel3.setLayout(panel3Layout);
        panel3Layout.setHorizontalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cadF, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel3Layout.createSequentialGroup()
                        .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nomeF, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                            .addComponent(cnpjF, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                            .addComponent(telF, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE))))
                .addContainerGap())
        );
        panel3Layout.setVerticalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(nomeF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(cnpjF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel3Layout.createSequentialGroup()
                        .addComponent(telF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                        .addComponent(cadF))
                    .addComponent(jLabel11))
                .addContainerGap())
        );

        AbaFornecedor.addTab("Cadastrar Fornecedor", panel3);

        panel4.setName("panel4"); // NOI18N

        findF.setName("findF"); // NOI18N
        findF.setText(resourceMap.getString("findF.text")); // NOI18N
        findF.addTextListener(new java.awt.event.TextListener() {
            public void textValueChanged(java.awt.event.TextEvent evt) {
                findFTextValueChanged(evt);
            }
        });

        listF.setName("listF"); // NOI18N
        listF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listFMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panel4Layout = new javax.swing.GroupLayout(panel4);
        panel4.setLayout(panel4Layout);
        panel4Layout.setHorizontalGroup(
            panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(findF, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(listF, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
        );
        panel4Layout.setVerticalGroup(
            panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(findF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(listF, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE))
        );

        AbaFornecedor.addTab("Encontrar Fornecedor", panel4);

        mainTab.addTab("Fornecedor", AbaFornecedor);
        AbaFornecedor.getAccessibleContext().setAccessibleParent(mainTab);

        AbaProduto.setFont(resourceMap.getFont("AbaProduto.font")); // NOI18N
        AbaProduto.setName("AbaProduto"); // NOI18N

        panel5.setName("panel5"); // NOI18N

        cadP.setText("Cadastrar"); // NOI18N
        cadP.setName("cadP"); // NOI18N
        cadP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cadPMouseClicked(evt);
            }
        });

        isProd.setLabel("Produzido"); // NOI18N
        isProd.setName("isProd"); // NOI18N
        isProd.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                isProdItemStateChanged(evt);
            }
        });

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        nomeP.setText(resourceMap.getString("nomeP.text")); // NOI18N

        qtdP.setModel(new javax.swing.SpinnerNumberModel());
        qtdP.setName("qtdP"); // NOI18N

        precoP.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), null, null, Double.valueOf(1.0d)));
        precoP.setName("precoP"); // NOI18N

        javax.swing.GroupLayout panel5Layout = new javax.swing.GroupLayout(panel5);
        panel5.setLayout(panel5Layout);
        panel5Layout.setHorizontalGroup(
            panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(panel5Layout.createSequentialGroup()
                        .addGroup(panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nomeP, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(precoP, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(qtdP, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))))
                    .addComponent(isProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cadP, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        panel5Layout.setVerticalGroup(
            panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nomeP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel5Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addGroup(panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(precoP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))))
                .addGap(10, 10, 10)
                .addGroup(panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(qtdP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(2, 2, 2)
                .addComponent(isProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(cadP)
                .addContainerGap())
        );

        AbaProduto.addTab("Cadastrar Produto", panel5);

        panel6.setName("panel6"); // NOI18N

        findP.setName("findP"); // NOI18N
        findP.setText(resourceMap.getString("findP.text")); // NOI18N
        findP.addTextListener(new java.awt.event.TextListener() {
            public void textValueChanged(java.awt.event.TextEvent evt) {
                findPTextValueChanged(evt);
            }
        });

        listP.setName("listP"); // NOI18N
        listP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listPMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panel6Layout = new javax.swing.GroupLayout(panel6);
        panel6.setLayout(panel6Layout);
        panel6Layout.setHorizontalGroup(
            panel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(findP, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(listP, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
        );
        panel6Layout.setVerticalGroup(
            panel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(findP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(listP, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE))
        );

        AbaProduto.addTab("Encontrar Produto", panel6);

        mainTab.addTab("Produto", AbaProduto);
        AbaProduto.getAccessibleContext().setAccessibleName(resourceMap.getString("AbaProduto.AccessibleContext.accessibleName")); // NOI18N
        AbaProduto.getAccessibleContext().setAccessibleParent(mainTab);

        AbaEnc.setFont(resourceMap.getFont("AbaEnc.font")); // NOI18N
        AbaEnc.setName("AbaEnc"); // NOI18N

        findE.setName("findE"); // NOI18N
        findE.setText(resourceMap.getString("findE.text")); // NOI18N
        findE.addTextListener(new java.awt.event.TextListener() {
            public void textValueChanged(java.awt.event.TextEvent evt) {
                findETextValueChanged(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        listE.setAutoCreateRowSorter(true);
        listE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Data de Entrega"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listE.setName("listE"); // NOI18N
        listE.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listEMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listE);

        javax.swing.GroupLayout AbaEncLayout = new javax.swing.GroupLayout(AbaEnc);
        AbaEnc.setLayout(AbaEncLayout);
        AbaEncLayout.setHorizontalGroup(
            AbaEncLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AbaEncLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(findE, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
        );
        AbaEncLayout.setVerticalGroup(
            AbaEncLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AbaEncLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(findE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE))
        );

        mainTab.addTab("Encomenda", AbaEnc);

        setComponent(mainTab);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void findCTextValueChanged(java.awt.event.TextEvent evt) {//GEN-FIRST:event_findCTextValueChanged
        clUpdate();
    }//GEN-LAST:event_findCTextValueChanged

    private void findPTextValueChanged(java.awt.event.TextEvent evt) {//GEN-FIRST:event_findPTextValueChanged
        plUpdate();
    }//GEN-LAST:event_findPTextValueChanged

    private void findFTextValueChanged(java.awt.event.TextEvent evt) {//GEN-FIRST:event_findFTextValueChanged
        flUpdate();
    }//GEN-LAST:event_findFTextValueChanged

    private void cadCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cadCMouseClicked
        Cliente c = new Cliente();
        String s;
        String fail = new String();

        s = nomeC.getText();
        if(!s.equals("")) c.setNome(s);
        if(s.equals("")) fail += "\nNome";

        s = cpfC.getText();
        if(!s.equals("")) c.setCPF(s);
        if(s.equals("")) fail += "\nCPF";

        s = rgC.getText();
        if(!s.equals("")) c.setRG(s);
        if(s.equals("")) fail += "\nRG";

        s = telC.getText();
        if(!s.equals("")) c.setTelefone(s);
        if(s.equals("")) fail += "\nTelefone";

        s = endC.getText();
        if(!s.equals("")) c.setEndereco(s);
        if(s.equals("")) fail += "\nEndereço";

        if(fail.equals("")){
            if(!addCliente(c)){
                showErro("Já existe cliente com o nome: ".concat(c.getNome()));
                return;
            }

            nomeC.setText("");
            cpfC.setText("");
            rgC.setText("");
            telC.setText("");
            endC.setText("");

            clUpdate();
            return;
        }

        if(!fail.equals("")) showErro("Os seguintes campos estão incorretos:".concat(fail));
    }//GEN-LAST:event_cadCMouseClicked

    private void cadFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cadFMouseClicked
        Fornecedor f = new Fornecedor();
        String s;
        String fail = new String();

        s = nomeF.getText();
        if(!s.equals("")) f.setNome(s);
        if(s.equals("")) fail += "\nNome";

        s = cnpjF.getText();
        if(!s.equals("")) f.setCNPJ(s);
        if(s.equals("")) fail += "\nCNPJ";

        s = telF.getText();
        if(!s.equals("")) f.setTelefone(s);
        if(s.equals("")) fail += "\nTelefone";

        if(fail.equals("")){
            if(!addFornecedor(f)){
                showErro("Já existe fornecedor com o nome: ".concat(f.getNome()));
                return;
            }

            nomeF.setText("");
            cnpjF.setText("");
            telF.setText("");

            flUpdate();
            return;
        }

        if(!fail.equals("")) showErro("Os seguintes campos estão incorretos:".concat(fail));
    }//GEN-LAST:event_cadFMouseClicked

    private void cadPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cadPMouseClicked
        Produto p = new Produto();
        String s;
        Double val;
        String fail = new String();

        p.setTipo(isProd.getState());

        s = nomeP.getText();
        if(!s.equals("")) p.setNome(s);
        if(s.equals("")) fail += "\nNome";

        val = (Double)precoP.getValue();
        if(val.compareTo(0.0) > 0) p.setPreco(val.doubleValue());
        if(val.compareTo(0.0) <= 0) fail += "\nPreco";

        val = ((Integer)qtdP.getValue()).doubleValue();
        if(val.compareTo(new Double(0)) >= 0) p.setQuantidade(val.intValue());
        if(val.compareTo(new Double(0)) < 0) fail += "\nQuantidade";
        
        if(fail.equals("")){
            if(!addProduto(p)){
                showErro("Já existe produto com o nome: ".concat(p.getNome()));
                return;
            }

            nomeP.setText("");
            precoP.setValue(0);
            qtdP.setEnabled(true);
            qtdP.setValue(0);
            isProd.setState(false);

            plUpdate();
            return;
        }

        if(!fail.equals("")) showErro("Os seguintes campos estão incorretos:".concat(fail));
    }//GEN-LAST:event_cadPMouseClicked

    private void listCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listCMouseClicked
        MenuCliente menuCliente;
        String s = listC.getSelectedItem();
        if(evt.getClickCount() == 2 && s != null){
            menuCliente = new MenuCliente(s);
            menuCliente.setLocationRelativeTo(mainTab);
        }
    }//GEN-LAST:event_listCMouseClicked

    private void isProdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_isProdItemStateChanged
        qtdP.setEnabled(!isProd.getState());
    }//GEN-LAST:event_isProdItemStateChanged

    private void findETextValueChanged(java.awt.event.TextEvent evt) {//GEN-FIRST:event_findETextValueChanged
        elUpdate();
    }//GEN-LAST:event_findETextValueChanged

    private void listPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listPMouseClicked
        MenuProduto menuProduto;
        String s = listP.getSelectedItem();
        if(evt.getClickCount() == 2 && s != null){
            menuProduto = new MenuProduto(s);
            menuProduto.setLocationRelativeTo(mainTab);
        }
    }//GEN-LAST:event_listPMouseClicked

    private void listFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listFMouseClicked
        MenuFornecedor menuFornecedor;
        String s = listF.getSelectedItem();
        if(evt.getClickCount() == 2 && s != null){
            menuFornecedor = new MenuFornecedor(s);
            menuFornecedor.setLocationRelativeTo(mainTab);
        }
    }//GEN-LAST:event_listFMouseClicked

    private void listEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listEMouseClicked
        MenuVenda menuVenda;
        String s = (String)listE.getValueAt(listE.getSelectedRow(), 0);
        if(evt.getClickCount() == 2 && s != null){
            menuVenda = new MenuVenda(findEncomenda(s));
            menuVenda.setLocationRelativeTo(mainTab);
        }
    }//GEN-LAST:event_listEMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane AbaCliente;
    private javax.swing.JPanel AbaEnc;
    private javax.swing.JTabbedPane AbaFornecedor;
    private javax.swing.JTabbedPane AbaProduto;
    private javax.swing.JButton cadC;
    private javax.swing.JButton cadF;
    private javax.swing.JButton cadP;
    private java.awt.TextField cnpjF;
    private java.awt.TextField cpfC;
    private java.awt.TextField endC;
    private static java.awt.TextField findC;
    private static java.awt.TextField findE;
    private static java.awt.TextField findF;
    private static java.awt.TextField findP;
    private java.awt.Checkbox isProd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private static java.awt.List listC;
    private static javax.swing.JTable listE;
    private static java.awt.List listF;
    private static java.awt.List listP;
    private static javax.swing.JTabbedPane mainTab;
    private javax.swing.JMenuBar menuBar;
    private java.awt.TextField nomeC;
    private java.awt.TextField nomeF;
    private java.awt.TextField nomeP;
    private java.awt.Panel panel1;
    private java.awt.Panel panel2;
    private java.awt.Panel panel3;
    private java.awt.Panel panel4;
    private java.awt.Panel panel5;
    private java.awt.Panel panel6;
    private javax.swing.JSpinner precoP;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JSpinner qtdP;
    private java.awt.TextField rgC;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    private java.awt.TextField telC;
    private java.awt.TextField telF;
    // End of variables declaration//GEN-END:variables
    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;
    private JDialog aboutBox;
    
    
    //Código pessoal

    private static Erro erro;
    private static ArrayList<Cliente> cs;
    private static ArrayList<Fornecedor> fs;
    private static ArrayList<Produto> ps;
    private static ArrayList<Encomenda> es;
    
    public static Integer code;

    public static void gravarCliente(){
        String fail = "";
        if(!Arq.gravarArray(cs, "cliente.dat")) fail += "\nCliente";
        if(!Arq.gravarVal(code.toString(), "codigo.dat")) fail += "\nCódigo";

        if(!"".equals(fail)) showErro("Erro ao gravar no arquivo de" + fail);
    }

    public static void gravarFornecedor(){
        String fail = "";
        if(!Arq.gravarArray(fs, "fornecedor.dat")) fail += "\nFornecedor";
        if(!Arq.gravarVal(code.toString(), "codigo.dat")) fail += "\nCódigo";

        if(!"".equals(fail)) showErro("Erro ao gravar no arquivo de:" + fail);
    }

    public static void gravarProduto(){
        String fail = "";
        if(!Arq.gravarArray(ps, "produto.dat")) fail += "Produto";

        if(!"".equals(fail)) showErro("Erro ao gravar no arquivo de " + fail);
    }

    public static void gravarEncomenda(){
        String fail = "";
        if(!Arq.gravarArray(es, "encomenda.dat")) fail += "Encomenda";

        if(!"".equals(fail)) showErro("Erro ao gravar no arquivo de " + fail);
    }

    public static void lerArq(){
        cs = Arq.lerArray("cliente.dat");
        if(cs == null) cs = new ArrayList<Cliente>();
        fs = Arq.lerArray("fornecedor.dat");
        if(fs == null) fs = new ArrayList<Fornecedor>();
        ps = Arq.lerArray("produto.dat");
        if(ps == null) ps = new ArrayList<Produto>();
        es = Arq.lerArray("encomenda.dat");
        if(es == null) es = new ArrayList<Encomenda>();

        String s =Arq.lerVal("codigo.dat");
        if(s != null) code = Integer.parseInt(s);
        if(s == null) code = new Integer(0);
    }

    public static void showErro(String s){
        erro = new Erro(s);
        erro.setLocationRelativeTo(mainTab);
    }

    public static void clUpdate(){
        boolean teste;
        String a, t;
        listC.removeAll();
        a = findC.getText();
        for(Cliente obj : cs){
            t = obj.getNome();
            teste = false;
            for(int i = 0; i < a.length(); i++){
                if(a.charAt(i) != t.charAt(i) || a.length() > t.length()){
                    teste = true;
                    break;
                }
            }
            if(!teste) listC.add(t);
        }
    }

    public static boolean addCliente(Cliente c){
        if(findCliente(c.getNome()) != null) return false;

        cs.add(c);
        gravarCliente();
        return true;
    }

    public static void delCliente(Cliente c){
        Cliente obj;
        for(int i = 0; i < cs.size(); i++){
            obj = cs.get(i);
            if(obj.getNome().equals(c.getNome())){
                cs.remove(i);
                gravarCliente();
                return;
            }
        }
    }

    public static Cliente findCliente(String s){
        for(Cliente obj : cs){
            if(obj.getNome().equals(s)) return obj;
        }
        return null;
    }

    public static void flUpdate(){
        boolean teste;
        String a, t;
        listF.removeAll();
        a = findF.getText();
        for(Fornecedor obj : fs){
            t = obj.getNome();
            teste = false;
            for(int i = 0; i < a.length(); i++){
                if(a.charAt(i) != t.charAt(i) || a.length() > t.length()){
                    teste = true;
                    break;
                }
            }
            if(!teste) listF.add(t);
        }
    }

    public static boolean addFornecedor(Fornecedor f){
        if(findFornecedor(f.getNome()) != null) return false;

        fs.add(f);
        gravarFornecedor();
        return true;
    }

    public static void delFornecedor(Fornecedor f){
        Fornecedor obj;
        for(int i = 0; i < fs.size(); i++){
            obj = fs.get(i);
            if(obj.getNome().equals(f.getNome())){
                fs.remove(i);
                gravarFornecedor();
                return;
            }
        }
    }
    
    public static Fornecedor findFornecedor(String s){
        for(Fornecedor obj : fs){
            if(obj.getNome().equals(s)) return obj;
        }
        return null;
    }

    public static void plUpdate(){
        boolean teste;
        String a, t;
        listP.removeAll();
        a = findP.getText();
        for(Produto obj : ps){
            t = obj.getNome();
            teste = false;
            for(int i = 0; i < a.length(); i++){
                if(a.charAt(i) != t.charAt(i) || a.length() > t.length()){
                    teste = true;
                    break;
                }
            }
            if(!teste) listP.add(t);
        }
    }

    public static boolean addProduto(Produto p){
        if(findProduto(p.getNome()) != null) return false;

        ps.add(p);
        gravarProduto();
        return true;
    }

    public static void delProduto(Produto p){
        Produto obj;
        for(int i = 0; i < ps.size(); i++){
            obj = ps.get(i);
            if(obj.getNome().equals(p.getNome())){
                ps.remove(i);
                gravarProduto();
                return;
            }
        }
    }
    
    public static Produto findProduto(String s){
        for(Produto obj : ps){
            if(obj.getNome().equals(s)) return obj;
        }
        return null;
    }
    
    public static ArrayList<Produto> getEstoque(){
        return ps;
    }

    public static void elUpdate(){
        DefaultTableModel modelo = (DefaultTableModel)listE.getModel();
        boolean teste;
        String a, t;
        int j;
        a = findE.getText();
        
        for(j = modelo.getRowCount() - 1; j >= 0; j--) modelo.removeRow(j);

        j = 0;
        for(Encomenda obj : es){
            t = obj.getCode();
            teste = false;
            for(int i = 0; i < a.length(); i++){
                if(a.charAt(i) != t.charAt(i) || a.length() > t.length()){
                    teste = true;
                    break;
                }
            }
            if(!teste){
                modelo.addRow(new Object[modelo.getColumnCount()]);
                listE.setValueAt(t,j,0);
                Integer val = 0;
                String s = "";
                val = obj.getDataE().get(GregorianCalendar.DAY_OF_MONTH);
                s = val.toString() + '/';
                val = obj.getDataE().get(GregorianCalendar.MONTH) + 1;
                s += val.toString() + '/';
                val = obj.getDataE().get(GregorianCalendar.YEAR);
                s += val.toString();
                listE.setValueAt(s,j,1);
            }
            j++;
        }
    }

    public static boolean addEncomenda(Encomenda e){
        if(findEncomenda(e.getCode()) != null) return false;

        es.add(e);
        gravarEncomenda();
        return true;
    }

    public static void delEncomenda(Encomenda e){
        Encomenda obj;
        for(int i = 0; i < es.size(); i++){
            obj = es.get(i);
            if(obj.getCode().equals(e.getCode())){
                es.remove(i);
                gravarEncomenda();
                return;
            }
        }
    }

    public static Encomenda findEncomenda(String s){
        for(Encomenda obj : es){
            if(obj.getCode().equals(s)) return obj;
        }

        return null;
    }
}
